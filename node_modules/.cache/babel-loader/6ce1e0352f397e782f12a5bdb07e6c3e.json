{"ast":null,"code":"var _jsxFileName = \"/Users/antonobolonik/Downloads/React---The-Complete-Guide-includes-Hooks-React-Router-and-Redux-Second-Edition-main/Section 11/code/01-starting-project/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./components/Layout/Header\";\nimport React, { useState } from \"react\";\nimport Meals from \"./components/Meals/Meals\";\nimport Cart from \"./components/Cart/Cart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  /* to the state we need to pass the initial state, it is false in this case (visible or not) */\n  const [cartIsShown, setCartIsShown] = useState(false);\n  /* than we need couple of function: click on button and cart will apears */\n\n  const showCartHandler = () => {\n    setCartIsShown(true);\n  };\n  /* click on button and cart will hides */\n\n\n  const hideCartHandler = () => {\n    setCartIsShown(false);\n  };\n  /*now we need dynamic expression which is {} where we will be shown <Cart/> is carIsShown === true */\n\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [cartIsShown && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(Meals, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"qBrpqHcSrFDZDSED56lNR5W+I6Y=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Header","React","useState","Meals","Cart","App","cartIsShown","setCartIsShown","showCartHandler","hideCartHandler"],"sources":["/Users/antonobolonik/Downloads/React---The-Complete-Guide-includes-Hooks-React-Router-and-Redux-Second-Edition-main/Section 11/code/01-starting-project/src/App.js"],"sourcesContent":["import Header from \"./components/Layout/Header\";\nimport React, { useState } from \"react\";\nimport Meals from \"./components/Meals/Meals\";\nimport Cart from \"./components/Cart/Cart\";\n\nfunction App() {\n\n  /* to the state we need to pass the initial state, it is false in this case (visible or not) */\n  const [cartIsShown, setCartIsShown] = useState(false);\n\n  /* than we need couple of function: click on button and cart will apears */\n  const showCartHandler = () =>{\n    setCartIsShown(true);\n  }\n  /* click on button and cart will hides */\n  const hideCartHandler = () =>{\n    setCartIsShown(false);\n  }\n\n  /*now we need dynamic expression which is {} where we will be shown <Cart/> is carIsShown === true */\n  return (\n    <React.Fragment>\n      {cartIsShown && <Cart/>}\n      <Header/>\n      <main>\n        <Meals/>\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,4BAAnB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb;EACA,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,KAAD,CAA9C;EAEA;;EACA,MAAMM,eAAe,GAAG,MAAK;IAC3BD,cAAc,CAAC,IAAD,CAAd;EACD,CAFD;EAGA;;;EACA,MAAME,eAAe,GAAG,MAAK;IAC3BF,cAAc,CAAC,KAAD,CAAd;EACD,CAFD;EAIA;;;EACA,oBACE,QAAC,KAAD,CAAO,QAAP;IAAA,WACGD,WAAW,iBAAI,QAAC,IAAD;MAAA;MAAA;MAAA;IAAA,QADlB,eAEE,QAAC,MAAD;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA,uBACE,QAAC,KAAD;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AASD;;GAxBQD,G;;KAAAA,G;AA0BT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}